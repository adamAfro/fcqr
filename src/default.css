@import url('https://fonts.googleapis.com/css2?family=Itim&family=Noto+Color+Emoji&display=swap');

:root {

    font: min(1em, 3.2vw) sans;
}

body {

    --button-height-font-size: 1.5em;
    --button-radius: .5em;

    --illuminated: 0 -.25em 2em -1em black;
    --clicked: 0 0 .25em black;
    --handwritten: 'Itim', sans-serif;
}

#root {

    --primary: rgb(36, 32, 32);
    --primary-active: rgb(0, 0, 0);
    --primary-invert: rgb(255, 255, 255);

    --secondary: rgb(248, 248, 229);
    --secondary-active: rgb(172, 180, 223);
    --secondary-invert: rgb(0, 0, 0);

    --accent: rgb(56, 189, 67);
    --accent-active: rgb(254, 255, 221);
    --accent-invert: rgb(34, 34, 34);

    --background: rgb(65, 65, 65);
    --background-invert: rgb(155, 155, 155);

    --dangerous: #f1974e;
    --dangerous-active: #d41e1e;

    fill: var(--background-invert);
    color: var(--background-invert);
    background-color: var(--background);

    position: relative;
    max-width: 100%;
    min-height: 100vh;
    margin: 0 auto;
    box-sizing: border-box;

    text-align: center;
}


#headline, #interactions {
    width: 32em; max-width: 100%;
    margin: 0 auto;
    box-sizing: border-box;
}

#headline {
    position: relative; padding: 2em 1em;
}
    #headline > button:not(h1):first-child {
        position: absolute; left: 0; bottom: 0;
    }

    #headline > select:not(h1):last-child {
        position: absolute; bottom: 1em; left: 50%;
    }

    #headline > h1 {
        margin: 0; font: 2em var(--handwritten);
    }

    #headline > h1 > * { padding-top: 0; padding-bottom: 0; }

#interactions {
    display: flex; 
    width: 32em; max-width: 100%;
    justify-content: space-evenly;
    align-items: flex-start;
    margin: 1em auto;
    font-size: 120%;
}

ul {
    list-style: none;
    margin: 0; padding: 0;
} ul > li:empty { display: none; }

input[type=file] { display: none; }
button, [role=button], select, textarea, input {

    
    font: inherit; text-align: center;
    color: inherit; text-decoration: none;
    
    display: inline-block; margin: var(--padding);
    
    border: none;
    box-sizing: border-box;

    width: min-content; white-space: nowrap;
    background: none; outline: none;

}

    textarea {

        padding: 1em;
        border-radius: 0;
        white-space: pre;
        overflow-x: wrap;
        text-align: left;
        resize: none;
        width: 100%;
    }

button, [role=button] {

    
    --padding: var(--button-radius);
    border-radius: var(--padding);
    padding: var(--padding) calc(3.2*var(--padding));
    
    background-color: var(--secondary);
    color: var(--secondary-invert);
    fill: var(--secondary-invert);
    transition: background .3s, color .3s, fill .3s;

    cursor: pointer;

} button::first-letter, [role=button]::first-letter { 
    text-transform: uppercase;
}

button.icon, .icon[role=button] {

    line-height: 0;
    width: min-content;
    padding: var(--padding);
}

        button > svg, [role=button] > svg {
            width: calc(2*var(--padding));
            height: calc(2*var(--padding));
        }

    button:is(:active, [data-active=true]),
    [role=button]:is(:active, [data-active=true]) {
        background-color: var(--secondary-active);
    }

    button:is(:focus, :hover, :active),
    [role=button]:is(:focus, :hover, :active) {
        box-shadow: var(--clicked);
    }

    [disabled]:is(button, [role=button]) {
        pointer-events: none;
        filter: contrast(.5);
        opacity: 1;
    }

[data-attention=primary]:is(button, [role=button]) {
    background-color: var(--primary); 
    color: var(--primary-invert);
    fill: var(--primary-invert);
} 

    [data-attention=primary]:is(button, [role=button]):is(:active, [data-active=true]) {
        background-color: var(--primary-active);
    }

[data-attention=accent]:is(button, [role=button]) {
    background-color: var(--accent);
} 

    [data-attention=accent]:is(button, [role=button]):is(:active, [data-active=true]) {
        background-color: var(--accent-active);
    }

[data-attention=removal]:is(button, [role=button]) {
    background-color: var(--dangerous);
} 

    [data-attention=error]:is(button, [role=button]),
    [data-attention=removal]:is(button, [role=button]):is(:active, [data-active=true]) {
        background-color: var(--dangerous-active);
    }

[data-attention=none]:is(button, [role=button]) {
    background: transparent;
    color: var(--background-invert);
    fill: var(--background-invert);
    backdrop-filter: blur(1pt);
} 

    [data-attention=none]:is(button, [role=button]):is(:active, [data-active=true]) {
        background: var(--background-invert);
        color: var(--background);
        fill: var(--background);
    }